"""
Django settings for app project.

Generated by 'django-admin startproject' using Django 4.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

import os
import json
from pathlib import Path
from django.core.exceptions import ImproperlyConfigured


def get_secret(attribute):
    """
    Retorna uma configuração armazenada em um arquivo.
    """

    with open(os.path.join(BASE_DIR, 'instance', 'database_credentials.json')) as read_file:
        secrets = json.load(read_file)

    try:
        return secrets[attribute]
    except KeyError:
        raise ImproperlyConfigured(
            f'Não foi encontrado o atributo {attribute} no arquivo app/instance/database_credentials.json'
        )


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-xg&d12&_n_0px7f=x7m2b33e9oc4ft*rwc%oa8eu$#^6cxjerm'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# ALLOWED_HOSTS = ['200.18.34.252']


# Application definition

INSTALLED_APPS = [
    'rankings.apps.PaisesConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'nested_inline',  # inlines aninhados na tela de administrador
    # 'bootstrap5',  # bootstrap nas páginas -- versão antiga
    'django_bootstrap5', # bootstrap nas páginas -- versão nova
    'crispy_forms',  # bootstrap nos formulários
    'crispy_bootstrap5',  # bootstrap nos formulários
    # 'django.contrib.flatpages',  # requisito do python_ibmdb_django
    # 'django.contrib.redirects',  # requisito do python_ibmdb_django
    # 'django.contrib.sites',  # requisito do python_ibmdb_django, precisa ser instalado por fora
    # 'django_comments',  # requisito do python_ibmdb_django, precisa ser instalado por fora
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'app.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    # para usar o banco de dados local, use esta opção
    # 'default': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': BASE_DIR / 'database_sqlite.db',
    # },
    # para usar o banco de dados remoto, use esta opção
    'default': {
        "NAME": 'BEE',
        "ENGINE": 'ibm_db_django',
        "DATABASE": get_secret('database'),
        "HOST": get_secret('host'),
        "PORT": get_secret('port'),
        "USER": get_secret('user'),
        "PASSWORD": get_secret('password'),
        "OPTIONS": {
            'dsn': f"DATABASE={get_secret('database')};HOSTNAME={get_secret('host')};"
                   f"PORT={get_secret('port')};PROTOCOL=TCPIP;"
        },
        'PCONNECT': True,
    },
    'local_sqlite': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'local.sqlite3',
    },
}

DATABASE_ROUTERS = ['app.db_routers.LocalAppsRouter']

# DATABASE_CREDENTIALS_PATH = os.path.join(
#     os.path.dirname(os.path.abspath(__file__)),
#     '..', 'instance', 'database_credentials.json'
# )

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    }, {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    }, {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    }, {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    }
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'pt-br'

TIME_ZONE = 'America/Sao_Paulo'

USE_I18N = True

USE_TZ = False  # precisa ser falso para usar ibm db2
# USE_TZ = True  # pode ser true para sqlite

# para usar boostrap nos formulários
CRISPY_ALLOWED_TEMPLATE_PACKS = 'bootstrap5'

CRISPY_TEMPLATE_PACK = 'bootstrap5'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [BASE_DIR / 'static']

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# precisou ser setado pra cima para remover as universidades duplicadsa
DATA_UPLOAD_MAX_NUMBER_FIELDS = 100000
